services:
  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      args:
        user: order_flow
        uid: 1000
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - backend
#      - frontend
    networks:
      - backend

  backend:
    container_name: backend
    restart: unless-stopped
    build:
      args:
        user: order_flow
        uid: 1000
      context: .
      dockerfile: docker/php/Dockerfile
    tty: true
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    container_name: mysql
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    environment:
      MYSQL_DATABASE: order_flow_db
      MYSQL_USER: order_flow_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - ./db_data:/var/lib/mysql
#    networks:
#      - backend

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

#  frontend:
#    container_name: frontend
#    restart: unless-stopped
#    build:
#      context: .
#      dockerfile: docker/node/Dockerfile
#    ports:
#      - "5137:5137"
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    command: ["sh", "-c", "yarn install && yarn dev"]
#    networks:
#      - backend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
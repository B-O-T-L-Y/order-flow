services:
  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      args:
        user: order_flow
        uid: 1000
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - backend
    networks:
      - backend
      - frontend

  backend:
    container_name: backend
    restart: unless-stopped
    build:
      args:
        user: order_flow
        uid: 1000
      context: .
      dockerfile: docker/php/Dockerfile
    environment:
      MYSQL_DATABASE: order_flow_db
      MYSQL_USER: order_flow_user
      MYSQL_PASSWORD: secret
    tty: true
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    container_name: mysql
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    environment:
      MYSQL_DATABASE: order_flow_db
      MYSQL_USER: order_flow_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - ./db_data:/var/lib/mysql
    networks:
      - backend

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      args:
        user: node
        uid: 1000
      context: .
      dockerfile: docker/node/Dockerfile
    environment:
      VITE_BACKEND_URL: http://localhost:8000
      VITE_FRONTEND_URL: http://localhost:5173
    ports:
      - "5173:5173"
    tty: true
    volumes:
      - ./frontend:/app
    depends_on:
      - nginx
    networks:
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge